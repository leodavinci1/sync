{"version":3,"sources":["../node_modules/discord.js/src/client/websocket/handlers sync /^/.//.*/.js$","bot.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","Album","classes","bott","discord","Client","useState","bottObj","logged","setLogged","tak","window","atob","channel_id","location","hash","split","mute","bot","channels","cache","find","channel","send","unMute","useEffect","login","on","document","onkeypress","event","keyCode","Fragment","CssBaseline","AppBar","position","Toolbar","style","justifyContent","Typography","variant","color","noWrap","className","Container","maxWidth","component","align","gutterBottom","paragraph","Grid","container","justify","item","Button","onClick","App","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6cb39873.chunk.js","sourcesContent":["var map = {\n\t\"./CHANNEL_CREATE.js\": 237,\n\t\"./CHANNEL_DELETE.js\": 238,\n\t\"./CHANNEL_PINS_UPDATE.js\": 239,\n\t\"./CHANNEL_UPDATE.js\": 240,\n\t\"./GUILD_BAN_ADD.js\": 241,\n\t\"./GUILD_BAN_REMOVE.js\": 242,\n\t\"./GUILD_CREATE.js\": 243,\n\t\"./GUILD_DELETE.js\": 244,\n\t\"./GUILD_EMOJIS_UPDATE.js\": 245,\n\t\"./GUILD_INTEGRATIONS_UPDATE.js\": 246,\n\t\"./GUILD_MEMBERS_CHUNK.js\": 247,\n\t\"./GUILD_MEMBER_ADD.js\": 248,\n\t\"./GUILD_MEMBER_REMOVE.js\": 249,\n\t\"./GUILD_MEMBER_UPDATE.js\": 250,\n\t\"./GUILD_ROLE_CREATE.js\": 251,\n\t\"./GUILD_ROLE_DELETE.js\": 252,\n\t\"./GUILD_ROLE_UPDATE.js\": 253,\n\t\"./GUILD_UPDATE.js\": 254,\n\t\"./INVITE_CREATE.js\": 255,\n\t\"./INVITE_DELETE.js\": 256,\n\t\"./MESSAGE_CREATE.js\": 257,\n\t\"./MESSAGE_DELETE.js\": 258,\n\t\"./MESSAGE_DELETE_BULK.js\": 259,\n\t\"./MESSAGE_REACTION_ADD.js\": 260,\n\t\"./MESSAGE_REACTION_REMOVE.js\": 261,\n\t\"./MESSAGE_REACTION_REMOVE_ALL.js\": 262,\n\t\"./MESSAGE_REACTION_REMOVE_EMOJI.js\": 263,\n\t\"./MESSAGE_UPDATE.js\": 264,\n\t\"./PRESENCE_UPDATE.js\": 265,\n\t\"./READY.js\": 266,\n\t\"./RESUMED.js\": 267,\n\t\"./TYPING_START.js\": 268,\n\t\"./USER_UPDATE.js\": 269,\n\t\"./VOICE_SERVER_UPDATE.js\": 270,\n\t\"./VOICE_STATE_UPDATE.js\": 271,\n\t\"./WEBHOOKS_UPDATE.js\": 272,\n\t\"./index.js\": 137\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 236;","import React, {useState, useEffect} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport discord from 'discord.js';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\n\n\n\nexport default function Album() {\n  const classes = useStyles();\n  const bott = new discord.Client();\n  const [bottObj, setBott] = useState(bott)\n  const [logged, setLogged] = useState(false);\n  const tak =  window.atob(\"TnpjeU9ESTVORFF3T1RBME1UTTBOek0yLlg2QVhnUS50Wm1LZmF6YnRwU3V3SW9EX0JjcGwteVNZWjA=\");\n  const channel_id = window.location.hash?.split(\"#\")[1];\n  const [id, setId] = useState(channel_id);\n  \n  const mute = (bot, channel_id) => {\n    const general = bottObj.channels.cache.find(channel => channel.id === id);\n    general.send(\",m\")\n  }\n\n  const unMute = (bot, channel_id) => {\n    const general = bottObj.channels.cache.find(channel => channel.id === id);\n    general.send(\",u\");\n  }\n  \n  useEffect(() => {\n    bottObj.login(tak);\n\n    bottObj.on(\"ready\", (e) => {\n      setLogged(true)\n      document.onkeypress = function (e) {\n        e = e || window.event;\n        // use e.keyCode\n        const code = e.keyCode\n        if(code === 32){\n          mute(bott, channel_id);\n        } else if (code === 13) {\n          unMute(bott, channel_id);\n        }\n    \n      };\n    })\n  },[]);\n  \n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar style={{display: \"flex\", justifyContent: \"space-between\"}}>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            v2.0\n          </Typography>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            sync\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main>\n        {/* Hero unit */}\n        <div style={{ height: \"calc(100vh - 56px)\" }} className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              Crewmate Helper\n            </Typography>\n            <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n              You can also hit space bar to mute and enter to unmute.\n            </Typography>\n            <div className={classes.heroButtons}>\n            <Grid style={{ marginTop: \"270px\" }} container spacing={2} justify=\"center\">\n                  {!!logged && !!channel_id ?\n                  <Grid item> <span className=\"dot green\"></span> Connected to <b>Voice channel</b></Grid>\n                : <Grid item> <span className=\"dot red\"></span> Not connected</Grid>\n                }\n                \n                \n              </Grid>\n              <Grid container spacing={2} justify=\"center\">\n                \n                <Grid item>\n                  <Button variant=\"contained\" color=\"primary\" onClick={() => mute(bott, channel_id)}>\n                    MUTE\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"primary\" onClick={() => unMute(bott, channel_id)}>\n                    UNMUTE\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n      </main>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport Bot from './bot';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Bot />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}